<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YL&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yl.frontjs.cc/"/>
  <updated>2018-07-24T09:33:51.113Z</updated>
  <id>https://yl.frontjs.cc/</id>
  
  <author>
    <name>YuanLong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Let&#39;s Encrypt 通配符证书配置</title>
    <link href="https://yl.frontjs.cc/2018/07/24/2018-03-30-Let&#39;s%20Encrypt%20https/"/>
    <id>https://yl.frontjs.cc/2018/07/24/2018-03-30-Let&#39;s Encrypt https/</id>
    <published>2018-07-24T07:44:25.203Z</published>
    <updated>2018-07-24T09:33:51.113Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文只是对配置过程的记录，如有问题，欢迎留言</p></blockquote><h4 id="环境与依赖"><a href="#环境与依赖" class="headerlink" title="环境与依赖"></a>环境与依赖</h4><a id="more"></a><p>阿里云ECS ubunt16.0.4<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install software-properties-common</span><br><span class="line">$ sudo add-apt-repository ppa:certbot/certbot</span><br><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install python-certbot-nginx</span><br></pre></td></tr></table></figure></p><h4 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ certbot -d *.frontjs.cc --server https://acme-v02.api.letsencrypt.org/directory --manual --preferred-challenges dns-01</span><br></pre></td></tr></table></figure><p>按提示操作，注意事项如下：<br><!-- ![](https://note.youdao.com/yws/public/resource/667b3a08188154053ca30cc9b4a55670/xmlnote/D7CADC68DF2D4E95BF33B073D7DDBC6F/8809) --><br><img src="https://note.youdao.com/yws/public/resource/667b3a08188154053ca30cc9b4a55670/xmlnote/D7CADC68DF2D4E95BF33B073D7DDBC6F/8809" alt=""><br>注意上面做记号的地方，到了这里先不要Enter，先去阿里云上域名解析哪里添加一条解析<br><img src="https://note.youdao.com/yws/public/resource/667b3a08188154053ca30cc9b4a55670/xmlnote/34860A24C96A4D97BA0C7E4F53813F74/8813" alt=""><br>添加完成后，新开一个窗口测试下是否成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ dig _acme-challenge.frontjs.cc txt</span><br></pre></td></tr></table></figure></p><p><img src="https://note.youdao.com/yws/public/resource/667b3a08188154053ca30cc9b4a55670/xmlnote/816102C56AF84B6CBF7F29817DB70D64/8818" alt=""><br>如上图所示，表示成功了<br>然后回到安装的窗口，按Enter<br><img src="https://note.youdao.com/yws/public/resource/667b3a08188154053ca30cc9b4a55670/xmlnote/68408B5BE6844EE1A1E007CD6B1F6CF0/8821" alt=""><br>OK，证书生成完成</p><blockquote><p>证书有效期3个月，设置定时任务来更新证书</p><ul><li>编写定时任务脚本<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/letsencrypt/live/renew.sh</span><br><span class="line"># 内容：certbot renew --pre-hook &quot;service nginx stop&quot; --post-hook &quot;service nginx start&quot;</span><br></pre></td></tr></table></figure></li></ul></blockquote><ul><li>设置定时任务<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ crontab -e</span><br><span class="line"># 添加如下内容 0 0 1 * * /etc/letsencrypt/live/renew.sh &gt;/dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure></li></ul><h4 id="nginx配置"><a href="#nginx配置" class="headerlink" title="nginx配置"></a>nginx配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  listen [::]:80;</span><br><span class="line"></span><br><span class="line">  listen 443 ssl;</span><br><span class="line">  # ssl off 支持http和https</span><br><span class="line">  # ssl on;</span><br><span class="line">  ssl_certificate /etc/letsencrypt/live/frontjs.cc/fullchain.pem;</span><br><span class="line">  ssl_certificate_key /etc/letsencrypt/live/frontjs.cc/privkey.pem;</span><br><span class="line"></span><br><span class="line">  server_name frontjs.cc;</span><br><span class="line"></span><br><span class="line">  # 强制https</span><br><span class="line">  # rewrite ^(.*)$  https://$host$1 permanent;</span><br><span class="line"></span><br><span class="line">  location / &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:7000;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启nginx<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ service nginx restart</span><br></pre></td></tr></table></figure></p><h5 id="enjoy-yourself"><a href="#enjoy-yourself" class="headerlink" title="enjoy yourself!"></a>enjoy yourself!</h5><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://letsencrypt.org/" target="_blank" rel="noopener">https://letsencrypt.org/</a><br><a href="https://certbot.eff.org/lets-encrypt/ubuntuxenial-nginx" target="_blank" rel="noopener">https://certbot.eff.org/lets-encrypt/ubuntuxenial-nginx</a><br><a href="https://certbot.eff.org/docs/using.html" target="_blank" rel="noopener">https://certbot.eff.org/docs/using.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文只是对配置过程的记录，如有问题，欢迎留言&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;环境与依赖&quot;&gt;&lt;a href=&quot;#环境与依赖&quot; class=&quot;headerlink&quot; title=&quot;环境与依赖&quot;&gt;&lt;/a&gt;环境与依赖&lt;/h4&gt;
    
    </summary>
    
    
      <category term="let&#39;s encrype" scheme="https://yl.frontjs.cc/tags/let-s-encrype/"/>
    
      <category term="https" scheme="https://yl.frontjs.cc/tags/https/"/>
    
  </entry>
  
  <entry>
    <title>ECS上nodejs升级(7.2.0)记录</title>
    <link href="https://yl.frontjs.cc/2016/12/08/2016-12-08-ecs-nodejs/"/>
    <id>https://yl.frontjs.cc/2016/12/08/2016-12-08-ecs-nodejs/</id>
    <published>2016-12-08T09:40:31.000Z</published>
    <updated>2018-07-24T07:44:25.203Z</updated>
    
    <content type="html"><![CDATA[<h5 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h5><p>如果之前是通过 <code>apt-get install nodejs npm</code>安装的，直接执行 <code>apt-get remove nodejs npm -y</code>卸载，若原来是通过源码编译安装的(我之前就是)，参考这个进行卸载<a href="https://hungred.com/how-to/completely-removing-nodejs-npm/" target="_blank" rel="noopener">https://hungred.com/how-to/completely-removing-nodejs-npm/</a></p><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -sL https://deb.nodesource.com/setup_7.x | sudo -E bash -</span><br><span class="line">sudo apt-get install -y nodejs</span><br></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions" target="_blank" rel="noopener">https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions</a></p></blockquote><h6 id="是否成功？"><a href="#是否成功？" class="headerlink" title="是否成功？"></a>是否成功？</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@yl:/etc# node -v</span><br><span class="line">-bash: /usr/local/bin/node: No such file or directory</span><br><span class="line">root@yl:/etc# npm -v</span><br><span class="line">-bash: /usr/local/bin/npm: No such file or directory</span><br></pre></td></tr></table></figure><p>很明显没成功(注：在真实的ubuntu里，已经成功了，这个是ECS上显示了)</p><h5 id="看看node装在哪了"><a href="#看看node装在哪了" class="headerlink" title="看看node装在哪了"></a>看看node装在哪了</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@yl:/etc# which node</span><br><span class="line">/usr/bin/node</span><br><span class="line">root@yl:/etc# which npm</span><br><span class="line">/usr/bin/npm</span><br></pre></td></tr></table></figure><p>可以看到，其实是安装成功了，只是命令的对应目录不对，这就好办了</p><h5 id="软链"><a href="#软链" class="headerlink" title="软链"></a>软链</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@yl:/etc# ln -s /usr/bin/nodejs /usr/local/bin/node</span><br><span class="line">root@yl:/etc# node -v</span><br><span class="line">v7.2.0</span><br><span class="line">root@yl:/etc# ln -s /usr/bin/npm /usr/local/bin/npm</span><br><span class="line">root@yl:/etc# npm -v</span><br><span class="line">3.10.9</span><br></pre></td></tr></table></figure><p>可以愉快的玩耍了~~</p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;卸载&quot;&gt;&lt;a href=&quot;#卸载&quot; class=&quot;headerlink&quot; title=&quot;卸载&quot;&gt;&lt;/a&gt;卸载&lt;/h5&gt;&lt;p&gt;如果之前是通过 &lt;code&gt;apt-get install nodejs npm&lt;/code&gt;安装的，直接执行 &lt;code&gt;apt-get remove nodejs npm -y&lt;/code&gt;卸载，若原来是通过源码编译安装的(我之前就是)，参考这个进行卸载&lt;a href=&quot;https://hungred.com/how-to/completely-removing-nodejs-npm/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://hungred.com/how-to/completely-removing-nodejs-npm/&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h5&gt;
    
    </summary>
    
    
      <category term="ecs" scheme="https://yl.frontjs.cc/tags/ecs/"/>
    
      <category term="ubuntu" scheme="https://yl.frontjs.cc/tags/ubuntu/"/>
    
      <category term="nodejs" scheme="https://yl.frontjs.cc/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu上搭建ftp服务器</title>
    <link href="https://yl.frontjs.cc/2016/06/13/2016-06-13-ubuntu-ftp/"/>
    <id>https://yl.frontjs.cc/2016/06/13/2016-06-13-ubuntu-ftp/</id>
    <published>2016-06-13T09:40:15.000Z</published>
    <updated>2018-07-24T07:44:25.203Z</updated>
    
    <content type="html"><![CDATA[<p>买阿里云的ECS有段时间了，也折腾了一段时间，过段时间写一写折腾的一些东东。昨天有个想法，服务器上已经搭建了一些东西，如果需要合作开发，必然需要给团队的开发人员服务器的账号和密码。但是这里涉及到一个权限问题，比如，当某个项目的前端开发人员只需要将前端代码上传到服务器，就没必要给服务器的所有权限。脑海中第一反应就是ftp了，刚使用ECS也是用ftp来管理文件的。当然，jekins的自动化部署也能解决这样的需求，这个以后有时间在写一篇。</p><a id="more"></a><p>在网上找了一些资料，以及查阅ECS的官方文档，也确实找到了我想要的东西，例如这个<br><a href="https://help.aliyun.com/knowledge_detail/5973912.html" target="_blank" rel="noopener">Linux下如何进行FTP设置</a>，还有这个<a href="https://help.aliyun.com/knowledge_detail/5990158.html?spm=5176.788314853.2.1.mVyePK" target="_blank" rel="noopener">ECS Linux配置vsftpd限制FTP账户访问其它目录</a>。</p><p>看完这两篇文章，发现没什么好写的，只剩下实践了。所以我打算在本地先测试一遍，如果没问题，然后就在ECS上去添加ftp用户，并设置访问权限，下面开始实践。</p><p>按照刚才给出的第一份文档，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@yl:/# apt-get install vsftpd -y</span><br><span class="line">root@yl:/# useradd -d /usr/yl -m -s /usr/sbin/nologin test</span><br><span class="line">root@yl:/# passwd test</span><br><span class="line">输入新的 UNIX 密码： </span><br><span class="line">重新输入新的 UNIX 密码： </span><br><span class="line">passwd：已成功更新密码</span><br><span class="line">root@yl:/# chown -R test.test /usr/yl</span><br></pre></td></tr></table></figure><p>然后就是修改vsftpd.conf和shells文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@yl:/# vim /etc/vsftpd.conf</span><br><span class="line">root@yl:/# vim /etc/shells</span><br></pre></td></tr></table></figure><p>shells文件的修改，在文件后面加上<code>/usr/sbin/nologin</code>，vsftpd.conf的关键修改如下，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chroot_local_user=YES</span><br><span class="line">chroot_list_enable=YES</span><br><span class="line"># (default follows)</span><br><span class="line">chroot_list_file=/etc/vsftpd.chroot_list</span><br></pre></td></tr></table></figure><p>这里简单说明下(来源于网络)：<br>chroot_local_user=YES       #是否将所有用户锁定在主目录,YES为启用 NO禁用.(包括注释掉也为禁用)<br>chroot_list_enable=YES     #是否启动锁定用户的名单 YES为启用  NO禁用(包括注释掉也为禁用)<br>chroot_list_file=/etc/vsftpd.chroot_list     #禁用的列表名单  格式为一行一个用户, 如果名单里面有一个ftpuser的用户, 则ftpuser用户不会锁定在主目录,用户将可以自由切换目录.</p><p>然后重启ftp服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@yl:/# service vsftpd restart</span><br></pre></td></tr></table></figure><p>尝试连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@yl:/usr# ftp 127.0.0.1</span><br><span class="line">Connected to 127.0.0.1.</span><br><span class="line">220 (vsFTPd 3.0.2)</span><br><span class="line">Name (127.0.0.1:yl): test</span><br><span class="line">331 Please specify the password.</span><br><span class="line">Password:</span><br><span class="line">500 OOPS: vsftpd: refusing to run with writable root inside chroot()</span><br><span class="line">Login failed.</span><br></pre></td></tr></table></figure><p>好吧，看到报500了，哈哈。针对这个问题，chrome了一番，得到的答案是最新的vsftp对受限用户的主目录不能设置writable权限。那么问题来了，我们创建用户并只允许其访问自己的主目录，这里又不能给他可写的权限，好像矛盾了。没错，确实矛盾了。既然官方说了不能给主目录可写权限，那么我们可以给他的子目录可写的权限，用户在子目录里进行对应的操作就可以了，如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@yl:/# chmod a-w /usr/yl</span><br><span class="line">root@yl:/# cd /usr/yl</span><br><span class="line">root@yl:/usr/yl# mkdir www</span><br><span class="line">root@yl:/usr/yl# ls</span><br><span class="line">www</span><br><span class="line">root@yl:/usr/yl# chmod 777 www</span><br></pre></td></tr></table></figure><p>我们再来连接试试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@yl:/usr# ftp 127.0.0.1</span><br><span class="line">Connected to 127.0.0.1.</span><br><span class="line">220 (vsFTPd 3.0.2)</span><br><span class="line">Name (127.0.0.1:yl): test</span><br><span class="line">331 Please specify the password.</span><br><span class="line">Password:</span><br><span class="line">230 Login successful.</span><br><span class="line">Remote system type is UNIX.</span><br><span class="line">Using binary mode to transfer files.</span><br><span class="line">ftp&gt;</span><br></pre></td></tr></table></figure><p>连接成功！</p><p>然后我使用xftp在windows里使用刚才新建的账号连接虚拟机里的服务器也正常连接了，并且只能访问自己的主目录，不能跳出当前目录，权限也跟刚才设置的一样，只能在子目录里上传文档。剩下的就是把这些操作在ECS上copy一次了，如果遇到了新的问题会在留言里贴出，如有疑问，欢迎留言。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;买阿里云的ECS有段时间了，也折腾了一段时间，过段时间写一写折腾的一些东东。昨天有个想法，服务器上已经搭建了一些东西，如果需要合作开发，必然需要给团队的开发人员服务器的账号和密码。但是这里涉及到一个权限问题，比如，当某个项目的前端开发人员只需要将前端代码上传到服务器，就没必要给服务器的所有权限。脑海中第一反应就是ftp了，刚使用ECS也是用ftp来管理文件的。当然，jekins的自动化部署也能解决这样的需求，这个以后有时间在写一篇。&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://yl.frontjs.cc/tags/linux/"/>
    
      <category term="ecs" scheme="https://yl.frontjs.cc/tags/ecs/"/>
    
      <category term="ftp" scheme="https://yl.frontjs.cc/tags/ftp/"/>
    
      <category term="ubuntu" scheme="https://yl.frontjs.cc/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>FormData API 上传文件到又拍云</title>
    <link href="https://yl.frontjs.cc/2016/04/25/2016-04-25-upload-pic-upyun/"/>
    <id>https://yl.frontjs.cc/2016/04/25/2016-04-25-upload-pic-upyun/</id>
    <published>2016-04-25T09:39:33.000Z</published>
    <updated>2018-07-24T07:44:25.202Z</updated>
    
    <content type="html"><![CDATA[<p>最近又遇到了上传文件的需求，以前也写过一篇关于利用formdata上传文件的文章(如需浏览，请点击<a href="http://yl2014.github.io/archivers/20160308/async-js-file-upload" target="_blank" rel="noopener">这里</a>)，<br>这次上传的地址是又拍云，在操作过程中稍微遇到了一些坑，这里简单记录下。</p><p>这里使用的是又拍云的<a href="http://docs.upyun.com/api/form_api/" target="_blank" rel="noopener">HTTP FORM API</a>，使用流程大概如下</p><a id="more"></a><ol><li><p>请求客户服务器，生成、获取上传所需的 signature、policy 参数。为了提升上传成功率（避免签名过期）、安全性(设置尽可能短的授权有效期)，我们建议在每次执行上传操作之前，都重新执行本步骤获取相关参数；</p></li><li><p>请求 UPYUN API 上传文件，校验返回结果/异步回调通知客户服务器；</p></li><li><p>处理常规客户业务流程。</p></li></ol><p>没错，我们首先要获取上传到又拍云所需要的字段，这个由自己的服务端返回，然后将这两个参数和文件参数一起请求又拍云的api接口即可，如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">Utils.ajaxGet(<span class="string">'/upload/sign'</span>,&#123;<span class="attr">mod</span>: <span class="string">'serverSite'</span>&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">    <span class="comment">/*data &#123;"signature":xxx, "policy":xxxx&#125;*/</span></span><br><span class="line">    upload(data);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> file,</span><br><span class="line">        fd = <span class="keyword">new</span> FormData(),</span><br><span class="line">        xhr = <span class="keyword">new</span> XMLHttpRequest(),</span><br><span class="line">        loaded, total, pre, url, input;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">document</span>.getElementById(<span class="string">'myUploadInput'</span>))&#123;</span><br><span class="line">        input = <span class="built_in">document</span>.getElementById(<span class="string">'myUploadInput'</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        input = <span class="built_in">document</span>.createElement(<span class="string">'input'</span>);</span><br><span class="line">        input.setAttribute(<span class="string">'id'</span>, <span class="string">'myUploadInput'</span>);</span><br><span class="line">        input.setAttribute(<span class="string">'type'</span>, <span class="string">'file'</span>);</span><br><span class="line">        input.setAttribute(<span class="string">'name'</span>, <span class="string">'file'</span>);</span><br><span class="line">        <span class="built_in">document</span>.body.appendChild(input);</span><br><span class="line">        input.style.display = <span class="string">'none'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    url = <span class="string">'http://v0.api.upyun.com/xxx'</span>;</span><br><span class="line"></span><br><span class="line">    input.click();</span><br><span class="line">    input.onchange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        file = input.files[<span class="number">0</span>];</span><br><span class="line">        fd.append(<span class="string">'signature'</span>, data.signature);</span><br><span class="line">        fd.append(<span class="string">'policy'</span>, data.policy);</span><br><span class="line">        fd.append(<span class="string">'file'</span>, file);</span><br><span class="line">        xhr.open(<span class="string">'post'</span>, url);</span><br><span class="line">        xhr.send(fd);</span><br><span class="line">        xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(xhr);</span><br><span class="line">            <span class="keyword">if</span>(xhr.status == <span class="number">200</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(xhr.readyState == <span class="number">4</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(option.callback <span class="keyword">instanceof</span> <span class="built_in">Function</span>)&#123;</span><br><span class="line">                        <span class="built_in">console</span>.log(xhr.responseText);</span><br><span class="line">                        <span class="keyword">if</span>(<span class="keyword">typeof</span> xhr.responseText == <span class="string">'string'</span>)&#123;</span><br><span class="line">                            option.callback(<span class="built_in">JSON</span>.parse(xhr.responseText))</span><br><span class="line">                        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                            option.callback(xhr.responseText);</span><br><span class="line">                        &#125;</span><br><span class="line">                        xhr = <span class="literal">null</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                Utils.showTips(<span class="string">'上传失败'</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        xhr.upload.onprogress = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">            loaded = event.loaded;</span><br><span class="line">            total = event.total;</span><br><span class="line">            pre = <span class="built_in">Math</span>.floor(<span class="number">100</span> * loaded / total);</span><br><span class="line">            <span class="keyword">if</span>(option.uploading <span class="keyword">instanceof</span> <span class="built_in">Function</span>)&#123;</span><br><span class="line">                option.uploading(pre);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码中<code>url</code>中的<code>xxx</code>，是又拍云配置里的<code>bucket-name</code>，具体的可以查看又拍云的相关api文档。</p><p>一切看似很正常，我开始也是这么觉得的，然后，bug发生了。当我们在页面上点击按钮调用上述方法的时候，发现什么也没有发生，按常理应该会打开本地的资源管理器的。<br>然后在控制台看看，发现只向自己的服务端发送了请求，创建的表单元素的<code>change</code>事件没有发生，这个断点可以看到。</p><p>为什么<code>change</code>没有发生？初步猜测，ajax发起的网络请求会阻塞或者影响浏览器UI层的渲染，然后谷歌查阅相关资料，也找到了相关的解释。</p><p><a href="http://greengerong.com/blog/2015/10/27/javascript-single-thread-and-browser-event-loop/" target="_blank" rel="noopener">资料一</a></p><p><a href="http://www.cnblogs.com/lvdabao/p/3744030.html" target="_blank" rel="noopener">资料二</a></p><p>既然找到了原因，解决办法也很明显了，如果使用的jQuery的ajax，可以尝试上述资料里的方法，我这里偷了个懒，从服务端获取signature、policy的方法放到了表单元素的<code>change</code>事件里。</p><p>代码如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">Utils.uploadFile = <span class="function"><span class="keyword">function</span> (<span class="params">option</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> file,</span><br><span class="line">        fd = <span class="keyword">new</span> FormData(),</span><br><span class="line">        xhr = <span class="keyword">new</span> XMLHttpRequest(),</span><br><span class="line">        loaded, total, pre, url, input;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">document</span>.getElementById(<span class="string">'myUploadInput'</span>))&#123;</span><br><span class="line">        input = <span class="built_in">document</span>.getElementById(<span class="string">'myUploadInput'</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        input = <span class="built_in">document</span>.createElement(<span class="string">'input'</span>);</span><br><span class="line">        input.setAttribute(<span class="string">'id'</span>, <span class="string">'myUploadInput'</span>);</span><br><span class="line">        input.setAttribute(<span class="string">'type'</span>, <span class="string">'file'</span>);</span><br><span class="line">        input.setAttribute(<span class="string">'name'</span>, <span class="string">'file'</span>);</span><br><span class="line">        <span class="built_in">document</span>.body.appendChild(input);</span><br><span class="line">        input.style.display = <span class="string">'none'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    url = <span class="string">'http://v0.api.upyun.com/xxx'</span>;</span><br><span class="line"></span><br><span class="line">    input.click();</span><br><span class="line"></span><br><span class="line">    input.onchange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> fileType = [<span class="string">'gif'</span>,<span class="string">'png'</span>,<span class="string">'jpg'</span>,<span class="string">'jpge'</span>];</span><br><span class="line">        <span class="keyword">var</span> type = input.value.split(<span class="string">'.'</span>).pop();</span><br><span class="line">        <span class="keyword">if</span>(fileType.indexOf(type.toLocaleLowerCase()) == <span class="number">-1</span>)&#123;</span><br><span class="line">            Utils.showTips(<span class="string">'该类型文件不支持，请选择图片文件'</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(option.maxSize &amp;&amp;  input.files[<span class="number">0</span>].size &gt; option.maxSize * <span class="number">1024</span> * <span class="number">1024</span>)&#123;</span><br><span class="line">            Utils.showTips(<span class="string">'请上传小于'</span>+option.maxSize+<span class="string">'M的文件'</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(option.beforeSend <span class="keyword">instanceof</span> <span class="built_in">Function</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(option.beforeSend(file) === <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Utils.ajaxGet(<span class="string">'/upload/sign'</span>,&#123;<span class="attr">mod</span>: <span class="string">'serverSite'</span>&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">            file = input.files[<span class="number">0</span>];</span><br><span class="line">            fd.append(<span class="string">'signature'</span>, data.signature);</span><br><span class="line">            fd.append(<span class="string">'policy'</span>, data.policy);</span><br><span class="line">            fd.append(<span class="string">'file'</span>, file);</span><br><span class="line">            xhr.open(<span class="string">'post'</span>, url);</span><br><span class="line">            xhr.send(fd);</span><br><span class="line">            xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(xhr);</span><br><span class="line">                <span class="keyword">if</span>(xhr.status == <span class="number">200</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(xhr.readyState == <span class="number">4</span>)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(option.callback <span class="keyword">instanceof</span> <span class="built_in">Function</span>)&#123;</span><br><span class="line">                            <span class="built_in">console</span>.log(xhr.responseText);</span><br><span class="line">                            <span class="keyword">if</span>(<span class="keyword">typeof</span> xhr.responseText == <span class="string">'string'</span>)&#123;</span><br><span class="line">                                option.callback(<span class="built_in">JSON</span>.parse(xhr.responseText))</span><br><span class="line">                            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                                option.callback(xhr.responseText);</span><br><span class="line">                            &#125;</span><br><span class="line">                            xhr = <span class="literal">null</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    Utils.showTips(<span class="string">'上传失败'</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            xhr.upload.onprogress = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">                loaded = event.loaded;</span><br><span class="line">                total = event.total;</span><br><span class="line">                pre = <span class="built_in">Math</span>.floor(<span class="number">100</span> * loaded / total);</span><br><span class="line">                <span class="keyword">if</span>(option.uploading <span class="keyword">instanceof</span> <span class="built_in">Function</span>)&#123;</span><br><span class="line">                    option.uploading(pre);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这就完了？ 其实并没有，还遇到一个奇葩问题，也就是刚才说的<code>change</code>事件没发生的时候，请求又拍云拿到的<code>xhr.status</code>为<code>0</code>，<br>可能是我孤陋寡闻了，还没听过状态码可以为0。只能说明谷歌很强大，马上就找到相关资料了，因为没有<code>send</code>。最开始的时候，又拍云的请求路径错了也拿到了为0的status，<br>以后遇到类似的情况可以从这几个方面去查找原因了。</p><p>上传文件到又拍云后，又拍云接口的返回参数里有个url，具体的文件访问路径为 <code>&quot;http://xxx.b0.upaiyun.com/&quot;+url</code>，<code>xxx</code>为<code>bucket-name</code>，<br>相关文档可以看<a href="http://docs.upyun.com/guide/#_4" target="_blank" rel="noopener">这里</a>。</p><p>差不多就这么多了，如有疑问欢迎留言。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近又遇到了上传文件的需求，以前也写过一篇关于利用formdata上传文件的文章(如需浏览，请点击&lt;a href=&quot;http://yl2014.github.io/archivers/20160308/async-js-file-upload&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这里&lt;/a&gt;)，&lt;br&gt;这次上传的地址是又拍云，在操作过程中稍微遇到了一些坑，这里简单记录下。&lt;/p&gt;
&lt;p&gt;这里使用的是又拍云的&lt;a href=&quot;http://docs.upyun.com/api/form_api/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;HTTP FORM API&lt;/a&gt;，使用流程大概如下&lt;/p&gt;
    
    </summary>
    
    
      <category term="js" scheme="https://yl.frontjs.cc/tags/js/"/>
    
      <category term="又拍云" scheme="https://yl.frontjs.cc/tags/%E5%8F%88%E6%8B%8D%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>微信jssdk使用记录</title>
    <link href="https://yl.frontjs.cc/2016/04/11/2016-04-11-wx-use/"/>
    <id>https://yl.frontjs.cc/2016/04/11/2016-04-11-wx-use/</id>
    <published>2016-04-11T09:39:13.000Z</published>
    <updated>2018-07-24T07:44:25.202Z</updated>
    
    <content type="html"><![CDATA[<p>话说接触微信开发是毕业前的第一份工作，当时所做的就是一些微信上的活动推广页面，用到的jssdk就只有微信分享跟网页登录授权吧。记得很久以前微信分享是不需要后端支持的，后来世界变了，不能只靠前端来拯救世界了…</p><p>最近的项目就是微信端的，首先用到的就是jssdk。下面整理几个，还没用上的等用上了再来补充。</p><a id="more"></a><p>首先贴上微信jssdk地址：<a href="http://mp.weixin.qq.com/wiki/7/aaa137b55fb2e0456bf8dd9148dd613f.html" target="_blank" rel="noopener">http://mp.weixin.qq.com/wiki/7/aaa137b55fb2e0456bf8dd9148dd613f.html</a></p><h3 id="初始配置"><a href="#初始配置" class="headerlink" title="初始配置"></a>初始配置</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wxConfig</span>(<span class="params">option</span>)</span>&#123;</span><br><span class="line">    wx.config(&#123;</span><br><span class="line">        debug: <span class="literal">false</span>,</span><br><span class="line">        appId: option.appId,</span><br><span class="line">        timestamp: option.timestamp,</span><br><span class="line">        nonceStr: option.nonceStr,</span><br><span class="line">        signature: option.signature,</span><br><span class="line">        jsApiList: [</span><br><span class="line">            <span class="string">'onMenuShareTimeline'</span>,</span><br><span class="line">            <span class="string">'onMenuShareAppMessage'</span>,</span><br><span class="line">            <span class="string">'onMenuShareQQ'</span>,</span><br><span class="line">            <span class="string">'onMenuShareWeibo'</span>,</span><br><span class="line">            <span class="string">'onMenuShareQZone'</span>,</span><br><span class="line">            <span class="string">'startRecord'</span>,</span><br><span class="line">            <span class="string">'stopRecord'</span>,</span><br><span class="line">            <span class="string">'onVoiceRecordEnd'</span>,</span><br><span class="line">            <span class="string">'playVoice'</span>,</span><br><span class="line">            <span class="string">'pauseVoice'</span>,</span><br><span class="line">            <span class="string">'stopVoice'</span>,</span><br><span class="line">            <span class="string">'onVoicePlayEnd'</span>,</span><br><span class="line">            <span class="string">'uploadVoice'</span>,</span><br><span class="line">            <span class="string">'downloadVoice'</span>,</span><br><span class="line">            <span class="string">'chooseImage'</span>,</span><br><span class="line">            <span class="string">'previewImage'</span>,</span><br><span class="line">            <span class="string">'uploadImage'</span>,</span><br><span class="line">            <span class="string">'downloadImage'</span>,</span><br><span class="line">            <span class="string">'translateVoice'</span>,</span><br><span class="line">            <span class="string">'getNetworkType'</span>,</span><br><span class="line">            <span class="string">'openLocation'</span>,</span><br><span class="line">            <span class="string">'getLocation'</span>, <span class="comment">//获取位置信息</span></span><br><span class="line">            <span class="string">'hideOptionMenu'</span>,</span><br><span class="line">            <span class="string">'showOptionMenu'</span>,</span><br><span class="line">            <span class="string">'hideMenuItems'</span>,</span><br><span class="line">            <span class="string">'showMenuItems'</span>,</span><br><span class="line">            <span class="string">'hideAllNonBaseMenuItem'</span>,</span><br><span class="line">            <span class="string">'showAllNonBaseMenuItem'</span>,</span><br><span class="line">            <span class="string">'closeWindow'</span>,</span><br><span class="line">            <span class="string">'scanQRCode'</span>,</span><br><span class="line">            <span class="string">'chooseWXPay'</span>, <span class="comment">//支付</span></span><br><span class="line">            <span class="string">'openProductSpecificView'</span>,</span><br><span class="line">            <span class="string">'addCard'</span>,</span><br><span class="line">            <span class="string">'chooseCard'</span>,</span><br><span class="line">            <span class="string">'openCard'</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>有 <code>option</code> 的参数是后端给的，具体的后端实现可以参考<a href="http://demo.open.weixin.qq.com/jssdk/sample.zip" target="_blank" rel="noopener">微信的官方demo</a></p></blockquote><h3 id="获取位置信息"><a href="#获取位置信息" class="headerlink" title="获取位置信息"></a>获取位置信息</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getLocation</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    wx.ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        wx.getLocation(&#123;</span><br><span class="line">            type: <span class="string">'gcj02'</span>,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> res = data;</span><br><span class="line">                <span class="keyword">if</span>(data.res)&#123;</span><br><span class="line">                    res = data.res;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> latitude = res.latitude;</span><br><span class="line">                <span class="keyword">var</span> longitude = res.longitude;</span><br><span class="line">                Utils.setData(<span class="string">'position'</span>,<span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">                    latitude: latitude,</span><br><span class="line">                    longitude: longitude</span><br><span class="line">                &#125;));</span><br><span class="line">                <span class="comment">//if(latitude &amp;&amp; longitude)&#123;</span></span><br><span class="line">                    getDetailAddr(latitude, longitude);</span><br><span class="line">                <span class="comment">//&#125;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            fail: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">                page.location = page.locationFailTip;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>以上代码通过微信拿到经纬度后，向后端发起请求拿详细地址(想前端自己拿详细地址，可以借助于百度地图的api，百度地图在微信里能否使用还没做尝试)</p></blockquote><h3 id="微信支付"><a href="#微信支付" class="headerlink" title="微信支付"></a>微信支付</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wxPays</span>(<span class="params">option</span>)</span>&#123;</span><br><span class="line">    wx.ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        wx.chooseWXPay(&#123;</span><br><span class="line">            timestamp: option.timeStamp, <span class="comment">// 支付签名时间戳，注意微信jssdk中的所有使用timestamp字段均为小写。但最新版的支付后台生成签名使用的timeStamp字段名需大写其中的S字符</span></span><br><span class="line">            nonceStr: option.nonceStr, <span class="comment">// 支付签名随机串，不长于 32 位</span></span><br><span class="line">            package: option.package, <span class="comment">// 统一支付接口返回的prepay_id参数值，提交格式如：prepay_id=***）</span></span><br><span class="line">            signType: option.signType, <span class="comment">// 签名方式，默认为'SHA1'，使用新版支付需传入'MD5'</span></span><br><span class="line">            paySign: option.paySign, <span class="comment">// 支付签名</span></span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">                <span class="comment">// 支付成功后的回调函数,请求服务器查询支付结果</span></span><br><span class="line">                <span class="keyword">var</span> prepayId = option.package.split(<span class="string">'='</span>)[<span class="number">1</span>];</span><br><span class="line">                checkPayResult(prepayId);</span><br><span class="line">            &#125;,</span><br><span class="line">            fail: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;&#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>以上带<code>option</code>的参数需服务端提供，发起微信支付后，会自动调出微信支付的面板，完成支付或取消支付会进入相应的回调，根据微信官方提供的<a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=7_4" target="_blank" rel="noopener">支付文档(业务流程说明)</a>，支付完成后，服务端需确认是否支付成功，所以我们还得向服务端发送一次支付结果确认请求。</p></blockquote><p>当时调支付时一个很小的错误导致支付面板没弹出，就使用了<a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=7_7&amp;index=6" target="_blank" rel="noopener">支付文档</a>里的示例<code>demo</code>，如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wxPays</span>(<span class="params">option</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//alert('微信支付配置参数:'+JSON.stringify(option));</span></span><br><span class="line">    onBridgeReady(option);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">onBridgeReady</span>(<span class="params">option</span>)</span>&#123;</span><br><span class="line">        WeixinJSBridge.invoke(</span><br><span class="line">            <span class="string">'getBrandWCPayRequest'</span>, &#123;</span><br><span class="line">                <span class="string">"appId"</span> : option.appId,     <span class="comment">//公众号名称，由商户传入</span></span><br><span class="line">                <span class="string">"timeStamp"</span> : option.timeStamp,         <span class="comment">//时间戳，自1970年以来的秒数</span></span><br><span class="line">                <span class="string">"nonceStr"</span> : option.nonceStr, <span class="comment">//随机串</span></span><br><span class="line">                <span class="string">"package"</span> : option.package,</span><br><span class="line">                <span class="string">"signType"</span> : option.signType,         <span class="comment">//微信签名方式：</span></span><br><span class="line">                <span class="string">"paySign"</span> : option.paySign <span class="comment">//微信签名</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">                <span class="comment">// 使用以上方式判断前端返回,微信团队郑重提示：res.err_msg将在用户支付成功后返回    ok，但并不保证它绝对可靠。</span></span><br><span class="line">                <span class="comment">//if(/ok/.test(res.err_msg)) &#123;</span></span><br><span class="line">                <span class="keyword">if</span>(res.err_msg == <span class="string">"get_brand_wcpay_request:ok"</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> prepayId = option.package.split(<span class="string">'='</span>)[<span class="number">1</span>];</span><br><span class="line">                    checkPayResult(prepayId);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    Utils.alert(&#123;</span><br><span class="line">                        title: <span class="string">'懂师傅提示您'</span>,</span><br><span class="line">                        content: <span class="string">'支付失败，请重新支付'</span>,</span><br><span class="line">                        callback: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                            <span class="built_in">window</span>.location.reload();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> WeixinJSBridge == <span class="string">"undefined"</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>( <span class="built_in">document</span>.addEventListener )&#123;</span><br><span class="line">            <span class="built_in">document</span>.addEventListener(<span class="string">'WeixinJSBridgeReady'</span>, onBridgeReady, <span class="literal">false</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.attachEvent)&#123;</span><br><span class="line">            <span class="built_in">document</span>.attachEvent(<span class="string">'WeixinJSBridgeReady'</span>, onBridgeReady);</span><br><span class="line">            <span class="built_in">document</span>.attachEvent(<span class="string">'onWeixinJSBridgeReady'</span>, onBridgeReady);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        onBridgeReady();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法在<code>android</code>机上测试是有效的，在<code>ios</code>机上测试是提示<code>调用jsApi时没有传timeStamp</code>，不知道是什么鬼，哪位朋友知道怎么解决的，欢迎留言告知，不胜感谢</p><h3 id="选择图片与上传图片"><a href="#选择图片与上传图片" class="headerlink" title="选择图片与上传图片"></a>选择图片与上传图片</h3><h5 id="选择图片"><a href="#选择图片" class="headerlink" title="选择图片"></a>选择图片</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">uploadImage</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    wx.ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        wx.chooseImage(&#123;</span><br><span class="line">            count: <span class="number">3</span>-page.photos.length, <span class="comment">// 默认9</span></span><br><span class="line">            sizeType: [<span class="string">'original'</span>, <span class="string">'compressed'</span>], <span class="comment">// 可以指定是原图还是压缩图，默认二者都有</span></span><br><span class="line">            sourceType: [<span class="string">'album'</span>, <span class="string">'camera'</span>], <span class="comment">// 可以指定来源是相册还是相机，默认二者都有</span></span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> localIds = res.localIds; <span class="comment">// 返回选定照片的本地ID列表，localId可以作为img标签的src属性显示图片</span></span><br><span class="line">                localIds.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(page.photos.indexOf(item) == <span class="number">-1</span>)&#123;</span><br><span class="line">                        page.photos.push(item);</span><br><span class="line">                        uploadToWx(item);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;,</span><br><span class="line">            fail: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;&#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="上传图片"><a href="#上传图片" class="headerlink" title="上传图片"></a>上传图片</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">uploadToWx</span>(<span class="params">localId</span>)</span>&#123;</span><br><span class="line">    wx.uploadImage(&#123;</span><br><span class="line">        localId: localId, <span class="comment">// 需要上传的图片的本地ID，由chooseImage接口获得</span></span><br><span class="line">        isShowProgressTips: <span class="number">0</span>, <span class="comment">// 默认为1，显示进度提示</span></span><br><span class="line">        success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">            page.serverIds.push(res.serverId); <span class="comment">// 返回图片的服务器端ID</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>感觉微信提供的能够调用手机拍照和相册的方法蛮实用的，一般这个在<code>app</code>里才能实现，浏览器一般也只能选择文件。选择了图片后，可以在回调里拿到图片的<code>id</code>列表,本地的图片<code>id</code>在微信里是可以用来显示图片的，通过该<code>id</code>列表的每个<code>id</code>(注意，这里是单个<code>id</code>，不是列表)，就可以调用微信上传图片的接口，将图片上传到微信服务器上，微信服务器目前对图片的保留时间是3天，上传成功后回调里可以拿到<code>serverId</code>，服务端通过<code>serverId</code>将微信服务器上的图片资源下载到自己的服务器或第三方进行存储。</p></blockquote><p>目前用的微信jssdk就这几个，后续有用上会再补上。</p><p>下面说下最近开发中遇到的问题，避免以后踩同样的坑。</p><h3 id="关于微信里的刷新"><a href="#关于微信里的刷新" class="headerlink" title="关于微信里的刷新"></a>关于微信里的刷新</h3><p>这个问题困扰了好久，也尝试过很多方法。<br>问题场景：有一个订单状态页面：订单提交成功，接单成功，待支付，支付成功待评价，评价成功。我用了一个页面，通过订单状态值来渲染对应的template，所以用户支付后刷新页面就应该看到待评价的内容，因为支付成功后页面刷新，订单状态值就改变了，评价后刷新是同样的道理。<br>尝试过的方法：</p><ul><li><p>window.location.reload();</p></li><li><p>window.location.href = window.location.href;</p></li><li><p>window.location.href = window.location.href + ‘&amp;r=’ + 时间戳</p></li></ul><p>结果均以失败告终，页面刷新，数据没刷新，通过<code>fiddler</code>查看网络请求发现，刷新页面时没有向服务器拿页面，说明拿的只是缓存，这种情况以前确实没遇到过，及时缓存严重，用时间戳的方法也一般可以解决。<br>后来在一个前端群里求助，得到了解决方法：<code>window.location.reload(true)</code>，传<code>true</code>强制刷新，好吧，看来还是得多看看基础，一直不知道这个方法还有个参数。这里也要感谢群里的那位朋友。</p><h3 id="关于js的事件代理"><a href="#关于js的事件代理" class="headerlink" title="关于js的事件代理"></a>关于js的事件代理</h3><p>以前一直有用<code>js</code>的事件代理，这次场景跟以前稍微有点不同，先看代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"equipments-list"</span> @<span class="attr">click</span>=<span class="string">"toStatusPage($event)"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"item in orders"</span> <span class="attr">class</span>=<span class="string">"equipments-item"</span> <span class="attr">:orderId</span>=<span class="string">"item.id"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"order-no"</span> <span class="attr">v-text</span>=<span class="string">"'单号'+item.orderNo"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"order-status"</span> <span class="attr">v-text</span>=<span class="string">"item.statusStr"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"equipments-detail"</span> <span class="attr">v-for</span>=<span class="string">"subItem in item.equipments"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-text</span>=<span class="string">"subItem.type+'安装'"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-text</span>=<span class="string">"subItem.brand+subItem.productNo"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-text</span>=<span class="string">"subItem.installWay"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-text</span>=<span class="string">"'费用：'+item.price+'元'"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-text</span>=<span class="string">"item.createTime+'下单'"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">toStatusPage: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> target = event.target;</span><br><span class="line">            <span class="keyword">while</span>(target.tagName != <span class="string">'LI'</span>)&#123;</span><br><span class="line">                target = target.parentNode;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> id = target.getAttribute(<span class="string">'orderId'</span>);</span><br><span class="line">            <span class="built_in">window</span>.location.href = Utils.baseUrl + <span class="string">'/html/orderStatus.html?id='</span>+id;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><blockquote><p>很简单的一个列表进详情，为了节省内存，使用了代理的方式，用<code>ul</code>来代理事件，最初的想法是<code>li</code>点击的时候获取他的<code>orderId</code>，然后跳转到对应的详情页，当使用代理方式拿到的<code>target</code>可能是<code>span</code>，也可能是<code>p</code>，如果层级很多就很可能是别的什么了。那么这里得想法吧拿到<code>li</code>，所以使用了<code>parentNode</code>这个东东，去判断<code>li</code>在哪，用了一个简单的循环，拿到<code>li</code>后结束循环，执行后面的操作，暂时这样解决了，还没有想到更好的方法，有更好的方法的朋友欢迎留言，让大家都学习下，谢啦！</p></blockquote><p>好了，暂时就总结这么多吧，文中如有错误之处麻烦指正，谢谢！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;话说接触微信开发是毕业前的第一份工作，当时所做的就是一些微信上的活动推广页面，用到的jssdk就只有微信分享跟网页登录授权吧。记得很久以前微信分享是不需要后端支持的，后来世界变了，不能只靠前端来拯救世界了…&lt;/p&gt;
&lt;p&gt;最近的项目就是微信端的，首先用到的就是jssdk。下面整理几个，还没用上的等用上了再来补充。&lt;/p&gt;
    
    </summary>
    
    
      <category term="js" scheme="https://yl.frontjs.cc/tags/js/"/>
    
      <category term="微信" scheme="https://yl.frontjs.cc/tags/%E5%BE%AE%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>addEvent和removeEvent</title>
    <link href="https://yl.frontjs.cc/2016/03/21/2016-03-21-add-event/"/>
    <id>https://yl.frontjs.cc/2016/03/21/2016-03-21-add-event/</id>
    <published>2016-03-21T09:38:46.000Z</published>
    <updated>2018-07-24T07:44:25.201Z</updated>
    
    <content type="html"><![CDATA[<p>最近在看<code>《精通JavaScript》</code>这本书，感觉还不错，这里记录下里面的事件监听与移除的方法，以备日后开发时参考。</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addEvent</span>(<span class="params">element, type, handler</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//为每一个事件处理函数赋予一个独立的ID</span></span><br><span class="line">    <span class="keyword">if</span>(!handler.$$guid)&#123;</span><br><span class="line">        handler.$$guid = addEvent.guid++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//为元素建立一个事件类型的散列表</span></span><br><span class="line">    <span class="keyword">if</span>(!element.events)&#123;</span><br><span class="line">        element.events = &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//为每对元素/事件建立一个事件处理函数的散列表</span></span><br><span class="line">    <span class="keyword">var</span> handlers = element.events[type];</span><br><span class="line">    <span class="keyword">if</span>(!handlers)&#123;</span><br><span class="line">        handlers = element.events[type] = &#123;&#125;;</span><br><span class="line">        <span class="comment">//存储已有的事件处理函数(如果已存在一个)</span></span><br><span class="line">        <span class="keyword">if</span>(element[<span class="string">"on"</span>+type])&#123;</span><br><span class="line">            handlers[<span class="number">0</span>] = element[<span class="string">"on"</span>+type];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//在散列表中存储该事件处理函数</span></span><br><span class="line">    handlers[handler.$$guid] = handler;</span><br><span class="line">    <span class="comment">//赋予一个全局事件处理函数来处理所有工作</span></span><br><span class="line">    element[<span class="string">"on"</span>+type] = handleEvent;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//创建独立ID的计数器</span></span><br><span class="line">addEvent.guid = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">removeEvent</span>(<span class="params">element, type, handler</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//从散列表中删除事件处理函数</span></span><br><span class="line">    <span class="keyword">if</span>(element.events &amp;&amp; element.events[type])&#123;</span><br><span class="line">        <span class="keyword">delete</span> element.events[type][handler.$$guid];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handleEvent</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> returnValue = <span class="literal">true</span>;</span><br><span class="line">    <span class="comment">//获取事件对象(IE使用全局的事件对象)</span></span><br><span class="line">    event = event || fixEvent(<span class="built_in">window</span>.event);</span><br><span class="line">    <span class="comment">//获取事件处理函数散列表的引用</span></span><br><span class="line">    <span class="keyword">var</span> handlers = <span class="keyword">this</span>.events[event.type];</span><br><span class="line">    <span class="comment">//依次执行每个事件处理函数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> handlers)&#123;</span><br><span class="line">        <span class="keyword">this</span>.$$handleEvent = handlers[i];</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.$$handleEvent(event) === <span class="literal">false</span>)&#123;</span><br><span class="line">            returnValue = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> returnValue;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//增加一些IE事件对象的缺乏的方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fixEvent</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//增加W3C标准事件方法</span></span><br><span class="line">    event.preventDefault = fixEvent.preventDefault;</span><br><span class="line">    event.stopPropagation = fixEvent.stopPropagation;</span><br><span class="line">    <span class="keyword">return</span> event;</span><br><span class="line">&#125;;</span><br><span class="line">fixEvent.preventDefault = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.returnValue =  <span class="literal">false</span>;</span><br><span class="line">&#125;;</span><br><span class="line">fixEvent.stopPropagation = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.cancelBulle = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*test*/</span> </span><br><span class="line"></span><br><span class="line">addEvent(<span class="built_in">document</span>.body, <span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'a'</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.body.click();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在看&lt;code&gt;《精通JavaScript》&lt;/code&gt;这本书，感觉还不错，这里记录下里面的事件监听与移除的方法，以备日后开发时参考。&lt;/p&gt;
    
    </summary>
    
    
      <category term="js" scheme="https://yl.frontjs.cc/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>宏碁4752g换ssd，光驱位装硬盘(多图慎入)</title>
    <link href="https://yl.frontjs.cc/2016/03/14/2016-03-14-note-ssd/"/>
    <id>https://yl.frontjs.cc/2016/03/14/2016-03-14-note-ssd/</id>
    <published>2016-03-14T09:38:27.000Z</published>
    <updated>2018-07-24T07:44:25.201Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>笔记本已经买了4年了，最近特别卡，打开IDE都要等半天，近期也没有换笔记本的打算，就索性换个ssd吧</p><h1 id="拆硬盘换ssd"><a href="#拆硬盘换ssd" class="headerlink" title="拆硬盘换ssd"></a>拆硬盘换ssd</h1><a id="more"></a><ul><li>准备：笔记本，工具箱，ssd，硬盘托架</li></ul><p><img src="http://7xrl5v.com1.z0.glb.clouddn.com/github%2Fio%2Fblog20160312-ssd-1.png" alt=""></p><ul><li>打开笔记本后盖，可以看到硬盘，拆下固定硬盘的几个螺丝，如图</li></ul><p><img src="http://7xrl5v.com1.z0.glb.clouddn.com/github%2Fio%2Fblog20160312-ssd-2.png" alt=""></p><ul><li>拆下硬盘</li></ul><p><img src="http://7xrl5v.com1.z0.glb.clouddn.com/github%2Fio%2Fblog20160312-ssd-3.png" alt=""></p><ul><li>将ssd装在硬盘位</li></ul><p><img src="http://7xrl5v.com1.z0.glb.clouddn.com/github%2Fio%2Fblog20160312-ssd-4.png" alt=""></p><ul><li>盖上硬盘固定盖，上好螺丝</li></ul><p><img src="http://7xrl5v.com1.z0.glb.clouddn.com/github%2Fio%2Fblog20160312-ssd-5.png" alt=""></p><ul><li>盖上笔记本后盖，ssd就装好了</li></ul><p><img src="http://7xrl5v.com1.z0.glb.clouddn.com/github%2Fio%2Fblog20160312-ssd-6.png" alt=""></p><h1 id="光驱位装硬盘"><a href="#光驱位装硬盘" class="headerlink" title="光驱位装硬盘"></a>光驱位装硬盘</h1><p>现在光驱的作用越来越小了，刚才从笔记本下下来的机械硬盘可以作为笔记本的存储，ssd就用来装系统装软件，所以可以将光驱拆下来，把空间留给硬盘</p><ul><li>拆光驱：拧下固定光驱的螺丝，如图，然后用针(买硬盘托架一般都会送一个细小的工具)在里面捅一下，同时稍微用点力往外拉光驱，光驱就拆下来了</li></ul><p><img src="http://7xrl5v.com1.z0.glb.clouddn.com/github%2Fio%2Fblog20160312-ssd-7.png" alt=""></p><ul><li>硬盘托架和光驱对比</li></ul><p><img src="http://7xrl5v.com1.z0.glb.clouddn.com/github%2Fio%2Fblog20160312-ssd-8.png" alt=""></p><p><img src="http://7xrl5v.com1.z0.glb.clouddn.com/github%2Fio%2Fblog20160312-ssd-9.png" alt=""></p><p><img src="http://7xrl5v.com1.z0.glb.clouddn.com/github%2Fio%2Fblog20160312-ssd-10.png" alt=""></p><ul><li>将硬盘放入托架，把原光驱边沿的小盖条拆下装在硬盘托架上，然后放入光驱位，一切就ok了</li></ul><p><img src="http://7xrl5v.com1.z0.glb.clouddn.com/github%2Fio%2Fblog20160312-ssd-11.png" alt=""></p><p><img src="http://7xrl5v.com1.z0.glb.clouddn.com/github%2Fio%2Fblog20160312-ssd-12.png" alt=""></p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>全部弄好后，开机，F2，开机首选项设置为光驱位的硬盘（也就是进入原来的操作系统），开机后在磁盘管理可以看到ssd的未分配的空间，就说明ssd安装成功，硬盘也在光驱位正常使用了。然后就是将系统安装在ssd，并设置ssd为第一启动项了。安装系统的内容这里就不多说了，网上很多教程。</p><p>本教程就说到这里，大家有什么问题欢迎留言。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;笔记本已经买了4年了，最近特别卡，打开IDE都要等半天，近期也没有换笔记本的打算，就索性换个ssd吧&lt;/p&gt;
&lt;h1 id=&quot;拆硬盘换ssd&quot;&gt;&lt;a href=&quot;#拆硬盘换ssd&quot; class=&quot;headerlink&quot; title=&quot;拆硬盘换ssd&quot;&gt;&lt;/a&gt;拆硬盘换ssd&lt;/h1&gt;
    
    </summary>
    
    
      <category term="ssd" scheme="https://yl.frontjs.cc/tags/ssd/"/>
    
  </entry>
  
  <entry>
    <title>关于javascript函数声明提升和变量声明提升</title>
    <link href="https://yl.frontjs.cc/2016/03/12/2016-03-13-define-upgrade/"/>
    <id>https://yl.frontjs.cc/2016/03/12/2016-03-13-define-upgrade/</id>
    <published>2016-03-12T09:37:36.000Z</published>
    <updated>2018-07-24T07:44:25.201Z</updated>
    
    <content type="html"><![CDATA[<p>一直知道javascript变量和函数都会在自己的作用于内声明提升，但是当变量名和函数名相同时，谁会覆盖谁呢？</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alert(a);</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;&#125;;</span><br><span class="line">alert(a);</span><br></pre></td></tr></table></figure><blockquote><p>结果：function a(){}    1</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alert(a);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line">alert(a);</span><br></pre></td></tr></table></figure><blockquote><p>结果：function a(){}    1</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alert(a);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> a;</span><br><span class="line">alert(a);</span><br></pre></td></tr></table></figure><blockquote><p>结果：function a(){}    function a(){}</p></blockquote><h3 id="结论："><a href="#结论：" class="headerlink" title="结论："></a>结论：</h3><p>同一个名称标识a，即有变量声明var a，又有函数声明function a() {}，不管二者声明的顺序，函数声明会覆盖变量声明，也就是说，此时a的值是声明的函数function a() {}。如果在变量声明的同时初始化a，或是之后对a进行赋值，此时a的值就是变量的值</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一直知道javascript变量和函数都会在自己的作用于内声明提升，但是当变量名和函数名相同时，谁会覆盖谁呢？&lt;/p&gt;
    
    </summary>
    
    
      <category term="js" scheme="https://yl.frontjs.cc/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>CRM前端架构分享</title>
    <link href="https://yl.frontjs.cc/2016/03/09/2016-03-09-crm-share/"/>
    <id>https://yl.frontjs.cc/2016/03/09/2016-03-09-crm-share/</id>
    <published>2016-03-09T09:36:27.000Z</published>
    <updated>2018-07-24T07:44:25.201Z</updated>
    
    <content type="html"><![CDATA[<h1 id="crm-app"><a href="#crm-app" class="headerlink" title="crm-app"></a>crm-app</h1><ul><li>开发工具：hbuilder</li><li>使用的技术：mui  arttemplate.js  h5+  native.js</li><li><a href="http://ask.dcloud.net.cn/docs" target="_blank" rel="noopener">参考文档</a></li></ul><h3 id="详细讲解"><a href="#详细讲解" class="headerlink" title="详细讲解"></a>详细讲解</h3><a id="more"></a><ul><li><p>项目结构</p></li><li><p><code>mainfist.json</code> 配置</p><ul><li>应用信息</li><li>图标，启动图片</li><li>sdk(关键点)</li><li>模块权限(关键点)</li></ul></li><li><p>版本升级</p><ul><li>修改<code>manifest.json</code>文件的版本号</li><li>修改<code>update.json</code>文件的版本号，以及更新资源路径</li></ul></li><li><p>开发中常用功能及填坑方法</p><ul><li>下拉刷新+上拉加载</li></ul></li></ul><blockquote><p><code>html</code>结构</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"refreshContainer"</span> <span class="attr">class</span>=<span class="string">"mui-content mui-scroll-wrapper"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mui-scroll"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>js</code>代码</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$.init(&#123;</span><br><span class="line">pullRefresh:&#123;</span><br><span class="line">container:<span class="string">'#refreshContainer'</span>,</span><br><span class="line">down: &#123;</span><br><span class="line">contentdown : <span class="string">"下拉可以刷新"</span>,</span><br><span class="line">    contentover : <span class="string">"释放立即刷新"</span>,</span><br><span class="line">    contentrefresh : <span class="string">"正在刷新..."</span>,</span><br><span class="line">    callback:process.pullDownList</span><br><span class="line">&#125;,</span><br><span class="line">up: &#123;</span><br><span class="line">callback: process.pullUpList</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><hr><ul><li>页面跳转</li></ul><p>页面类型：组装页面  独立页面 (举个栗子 return模块)<br>跳转页面事件触发：<code>fire</code>  mui.back()</p><ul><li><p>相关sdk (地图、复制、粘贴、文件上传、拍照、分享) </p><ul><li><p>调试，直接连手机</p></li><li><p>打包 （云端打包生成<code>apk</code>和<code>ipa</code>文件）</p></li></ul><blockquote><p>ios打包需要相关账号信息及证书(开发证书有过期时间)，android可以使用dcloud的公用证书也可以用自己的证书</p></blockquote><ul><li>全局方法<ul><li>常用的方法可以写在<code>app.js</code>在(公共文件)文件中，比如全局<code>ajax</code>等</li></ul></li></ul><hr></li></ul><h1 id="crm-pc"><a href="#crm-pc" class="headerlink" title="crm-pc"></a>crm-pc</h1><ul><li>开发工具 ：webstorm<ul><li>插件配置：scss（配置后，sass自动转css）</li></ul></li><li>开发环境搭建：<ul><li>安装<a href="https://nodejs.org/en/" target="_blank" rel="noopener">nodejs</a>，推荐4.2以上版本</li><li>安装<code>gulp</code>，构建工具</li><li>安装其他打包插件(package.json已经配置好构建插件的依赖，直接执行<code>npm install</code>即可安装，安装不了，请翻墙)</li></ul></li><li><p>项目结构</p></li><li><p>开发规范</p><ul><li>js、css、html、等资源单独文件夹放置</li><li>一个模块一个文件夹，每种资源都一致，css(scss文件)资源统一引入公共样式 <code>@import &quot;../subBase&quot;;</code></li><li>body标签统计加上类名为模块名字，方便构建后特殊样式区分</li><li>暂时没做依赖管理，按需引入组件：库-&gt;插件(组件)-&gt;自定义</li><li>开发目录src，发布目录dist</li></ul></li><li><p>UI及库</p><ul><li>ui使用bootstrap，引入jquery主要是为了支持bootstrap</li><li>使用<a href="http://cn.vuejs.org/驱动页面数据(一般页面上的dom操作基本都可以转换为数据操作" target="_blank" rel="noopener">vue.js</a></li></ul></li><li><p>vue常用功能介绍</p><ul><li>数据绑定，计算属性，方法绑定，属性，组件化(stateAnalysis模块)</li></ul></li><li><p>构建方法及常用gulp插件：(见gulpfile文件)</p></li><li><p>其他</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;crm-app&quot;&gt;&lt;a href=&quot;#crm-app&quot; class=&quot;headerlink&quot; title=&quot;crm-app&quot;&gt;&lt;/a&gt;crm-app&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;开发工具：hbuilder&lt;/li&gt;
&lt;li&gt;使用的技术：mui  arttemplate.js  h5+  native.js&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ask.dcloud.net.cn/docs&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;参考文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;详细讲解&quot;&gt;&lt;a href=&quot;#详细讲解&quot; class=&quot;headerlink&quot; title=&quot;详细讲解&quot;&gt;&lt;/a&gt;详细讲解&lt;/h3&gt;
    
    </summary>
    
    
      <category term="crm" scheme="https://yl.frontjs.cc/tags/crm/"/>
    
  </entry>
  
  <entry>
    <title>关于js异步上传文件</title>
    <link href="https://yl.frontjs.cc/2016/03/08/2016-03-08-file-upload/"/>
    <id>https://yl.frontjs.cc/2016/03/08/2016-03-08-file-upload/</id>
    <published>2016-03-08T09:34:59.000Z</published>
    <updated>2018-07-24T07:44:25.200Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文首发在我的博客园：<a href="http://www.cnblogs.com/yuanlong1012/p/5127497.html" target="_blank" rel="noopener">http://www.cnblogs.com/yuanlong1012/p/5127497.html</a></p></blockquote><p>最近项目里有个需求，上传文件（好吧，这种需求很常见，这也不是第一次遇到了）。当时第一想法就是直接用form表单提交（原谅我以前就是这么干的），不过表单里不仅有文件还有别的信息需要交互，跟后端商量后决定文件单独上传，获取到服务器端返回的文件地址在和表单一起提交。这里就需要异步上传文件。<br>　　在网上扒了扒相关的内容，发现还真不少，阮一峰老师的这篇文章<a href="http://www.ruanyifeng.com/blog/2012/08/file_upload.html" target="_blank" rel="noopener">文件上传的渐进式增强</a>就介绍的很具体，下面就谈谈自己在实战中遇到的一些问题的感受吧。</p><a id="more"></a><p>　　先看看效果，实现了哪些功能</p><p><img src="http://images2015.cnblogs.com/blog/695097/201601/695097-20160113143715944-686026729.png" alt="">（好吧，就一个按钮而已，搞得神神秘秘，嘿嘿）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn"</span> @<span class="attr">click</span>=<span class="string">"upload"</span>&gt;</span>点击上传文件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>给按钮绑定了一个点击事件，下面看看点击事件方法里做了什么</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">    upload: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        myUpload(&#123;</span><br><span class="line">            url: <span class="built_in">window</span>.location.protocol + <span class="string">'//'</span> + <span class="built_in">window</span>.location.host + <span class="string">'/crm/upload'</span>,</span><br><span class="line">            maxSize: <span class="number">10</span>,</span><br><span class="line">            beforeSend: <span class="function"><span class="keyword">function</span>(<span class="params">file</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line">            callback: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> data = <span class="built_in">JSON</span>.parse(res);</span><br><span class="line">                pageCont.attachmentUrl = data.url;</span><br><span class="line">            &#125;,</span><br><span class="line">            uploading: <span class="function"><span class="keyword">function</span>(<span class="params">pre</span>)</span>&#123;</span><br><span class="line">                pageCont.uploadCont.display = <span class="string">'block'</span>;</span><br><span class="line">                pageCont.uploadStyle.width = pre * <span class="number">2</span> + <span class="string">'px'</span>;</span><br><span class="line">                pageCont.pre = pre;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>按钮绑定的点击事件执行了upload方法，在upload方法里调用了一下myUpload方法，并传递了一些配置信息进去，稍后说下这些配置信息。先看看myUpload的具体实现：</p><p>　　初始化了一个FormData对象和一个XMHttpResquest对象，创建一个type为file的input，并触发一次该input的click，如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fd = <span class="keyword">new</span> FormData(),</span><br><span class="line">    xhr = <span class="keyword">new</span> XMLHttpRequest(),</span><br><span class="line">    input;</span><br><span class="line">input = <span class="built_in">document</span>.createElement(<span class="string">'input'</span>);</span><br><span class="line">input.setAttribute(<span class="string">'id'</span>, <span class="string">'myUploadInput'</span>);</span><br><span class="line">input.setAttribute(<span class="string">'type'</span>, <span class="string">'file'</span>);</span><br><span class="line">input.setAttribute(<span class="string">'name'</span>, <span class="string">'file'</span>);</span><br><span class="line"><span class="built_in">document</span>.body.appendChild(input);</span><br><span class="line">input.style.display = <span class="string">'none'</span>;</span><br><span class="line">input.click();</span><br></pre></td></tr></table></figure><p>监听刚才创建的input的change事件，并作在里面做相应处理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">input.onchange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!input.value)&#123;<span class="keyword">return</span>;&#125;</span><br><span class="line">    <span class="keyword">if</span>(option.maxSize &amp;&amp;  input.files[<span class="number">0</span>].size &gt; option.maxSize * <span class="number">1024</span> * <span class="number">1024</span>)&#123;</span><br><span class="line">        dialog(&#123;</span><br><span class="line">            title: <span class="string">'提示'</span>,</span><br><span class="line">            content: <span class="string">'请上传小于'</span>+option.maxSize+<span class="string">'M的文件'</span>,</span><br><span class="line">            okValue: <span class="string">'确定'</span>,</span><br><span class="line">            ok: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">        &#125;).showModal();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(option.beforeSend <span class="keyword">instanceof</span> <span class="built_in">Function</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(option.beforeSend(input) === <span class="literal">false</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fd.append(<span class="string">'file'</span>, input.files[<span class="number">0</span>]);</span><br><span class="line">    xhr.open(<span class="string">'post'</span>, option.url);</span><br><span class="line">    xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(xhr.status == <span class="number">200</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(xhr.readyState == <span class="number">4</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(option.callback <span class="keyword">instanceof</span> <span class="built_in">Function</span>)&#123;</span><br><span class="line">                    option.callback(xhr.responseText);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(!(dialog.get(<span class="string">'uploadfail'</span>)))&#123;</span><br><span class="line">                dialog(&#123;</span><br><span class="line">                    id: <span class="string">'uploadfail'</span>,</span><br><span class="line">                    title: <span class="string">'提示'</span>,</span><br><span class="line">                    content: <span class="string">'上传失败'</span>,</span><br><span class="line">                    okValue: <span class="string">'确定'</span>,</span><br><span class="line">                    ok: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">                &#125;).showModal();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    xhr.upload.onprogress = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> pre = <span class="built_in">Math</span>.floor(<span class="number">100</span> * event.loaded / event.total);</span><br><span class="line">        <span class="keyword">if</span>(option.uploading <span class="keyword">instanceof</span> <span class="built_in">Function</span>)&#123;</span><br><span class="line">            option.uploading(pre);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    xhr.send(fd);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解释下上面的代码。input的change事件触发后，首先判断了下当前是否选择了文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!input.value)&#123;<span class="keyword">return</span>;&#125;</span><br></pre></td></tr></table></figure><p>一开始我是没做这个判断的，在后来的测试过程中发现，当上传一次文件后，再次点击按钮上传，打开文件选择框，然后不选择文件，而是点击取消按钮，change事件也触发了，导致后面的代码也会执行，显然这不合理，故加了这个判断。</p><p>　　然后限制了下上传文件的大小（这样的事能够前端处理就不要交给服务端来验证了），当文件大小超过最大限制，就会弹框提示</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(option.maxSize &amp;&amp;  input.files[<span class="number">0</span>].size &gt; option.maxSize * <span class="number">1024</span> * <span class="number">1024</span>)&#123;</span><br><span class="line">    dialog(&#123;</span><br><span class="line">        title: <span class="string">'提示'</span>,</span><br><span class="line">        content: <span class="string">'请上传小于'</span>+option.maxSize+<span class="string">'M的文件'</span>,</span><br><span class="line">        okValue: <span class="string">'确定'</span>,</span><br><span class="line">        ok: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">    &#125;).showModal();</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后加了一个文件上传前的操作，可以在文件上传前做一些处理，如进度条的显示，图片预览等等</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(option.beforeSend <span class="keyword">instanceof</span> <span class="built_in">Function</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(option.beforeSend(input) === <span class="literal">false</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来将文件append到formData对象里，使用字段名‘file’，该字段名是服务端接收文件时使用的字段名</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fd.append(<span class="string">'file'</span>, input.files[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure><p>然后就是使用XMLHttpRequest对象向服务端发送数据了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">xhr.open(<span class="string">'post'</span>, option.url);</span><br><span class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(xhr.status == <span class="number">200</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(xhr.readyState == <span class="number">4</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(option.callback <span class="keyword">instanceof</span> <span class="built_in">Function</span>)&#123;</span><br><span class="line">                option.callback(xhr.responseText);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!(dialog.get(<span class="string">'uploadfail'</span>)))&#123;</span><br><span class="line">            dialog(&#123;</span><br><span class="line">                id: <span class="string">'uploadfail'</span>,</span><br><span class="line">                title: <span class="string">'提示'</span>,</span><br><span class="line">                content: <span class="string">'上传失败'</span>,</span><br><span class="line">                okValue: <span class="string">'确定'</span>,</span><br><span class="line">                ok: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">            &#125;).showModal();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">xhr.upload.onprogress = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> pre = <span class="built_in">Math</span>.floor(<span class="number">100</span> * event.loaded / event.total);</span><br><span class="line">    <span class="keyword">if</span>(option.uploading <span class="keyword">instanceof</span> <span class="built_in">Function</span>)&#123;</span><br><span class="line">        option.uploading(pre);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">xhr.send(fd);</span><br></pre></td></tr></table></figure><p>再向服务端发送数据时，使用了监听了一下progress事件，主要是为了进行上传进度的显示，上述代码中，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> pre = <span class="built_in">Math</span>.floor(<span class="number">100</span> * event.loaded / event.total);</span><br></pre></td></tr></table></figure><p>获取上传的百分比，能够拿到这个值，页面上就可以展示各种各样的上传进度效果了。</p><p>　　差不多介绍完了，下面补充一下使用中遇到的问题：</p><p>　　问题一：文件在上传的过程中，使用JSON.parse()序列化服务端返回的json字符串报错(傻啊，文件还在上传，服务端怎么会返回数据啊)。</p><p>事情是这样的，一开始，我在readystatechange里只监听了状态码是否是200，如果是就说明通了，然后执行回调，在回调里处理服务端返回的数据，但是通了不一定代表服务端已经返回了数据，所以就出现了上面的错误，所以后来在判断了status是否为200后，还判断了readyState，以确保服务端已处理完毕并返回数据在执行回调</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(xhr.status == <span class="number">200</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(option.callback <span class="keyword">instanceof</span> <span class="built_in">Function</span>)&#123;</span><br><span class="line">        option.callback(xhr.responseText);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>问题二：重复创建input。每次点击按钮上传文件后，页面都会多一个type=file的input感觉不是很好（个人癖好吧），所以对最开始的初始化代码做了下优化，判断当前页面是否存在刚才创建的input，存在就直接使用，不存在就创建，如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="built_in">document</span>.getElementById(<span class="string">'myUploadInput'</span>))&#123;</span><br><span class="line">    input = <span class="built_in">document</span>.getElementById(<span class="string">'myUploadInput'</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    input = <span class="built_in">document</span>.createElement(<span class="string">'input'</span>);</span><br><span class="line">    input.setAttribute(<span class="string">'id'</span>, <span class="string">'myUploadInput'</span>);</span><br><span class="line">    input.setAttribute(<span class="string">'type'</span>, <span class="string">'file'</span>);</span><br><span class="line">    input.setAttribute(<span class="string">'name'</span>, <span class="string">'file'</span>);</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(input);</span><br><span class="line">    input.style.display = <span class="string">'none'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好了，就这么多了。看看效果<br><img src="http://images2015.cnblogs.com/blog/695097/201601/695097-20160113154319132-891661887.png" alt=""><br><img src="http://images2015.cnblogs.com/blog/695097/201601/695097-20160113154331335-1308230912.png" alt=""><br><img src="http://images2015.cnblogs.com/blog/695097/201601/695097-20160113154343678-1782738937.png" alt=""></p><p>刚才加了个需求，限制上传文件类型，作了如下修改：</p><ul><li>myUpload方法，初始化时增加了支持文件类型，如下</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fileType = [<span class="string">'doc'</span>,<span class="string">'docx'</span>,<span class="string">'xls'</span>,<span class="string">'xlsx'</span>,<span class="string">'pdf'</span>,<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'ppt'</span>,<span class="string">'pptx'</span>]</span><br></pre></td></tr></table></figure><ul><li>change发生后，检查文件类型，如下</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> type = input.value.split(<span class="string">'.'</span>).pop();</span><br><span class="line"><span class="keyword">if</span>(fileType.indexOf(type.toLocaleLowerCase()) == <span class="number">-1</span>)&#123;</span><br><span class="line">    dialog(&#123;</span><br><span class="line">        title: <span class="string">'提示'</span>,</span><br><span class="line">        content: <span class="string">'暂不支持该类型的文件，请重新选择!'</span>,</span><br><span class="line">        okValue: <span class="string">'确定'</span>,</span><br><span class="line">        ok: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">    &#125;).showModal();</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因个人知识面有限，如有错误，还请指正。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文首发在我的博客园：&lt;a href=&quot;http://www.cnblogs.com/yuanlong1012/p/5127497.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.cnblogs.com/yuanlong1012/p/5127497.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最近项目里有个需求，上传文件（好吧，这种需求很常见，这也不是第一次遇到了）。当时第一想法就是直接用form表单提交（原谅我以前就是这么干的），不过表单里不仅有文件还有别的信息需要交互，跟后端商量后决定文件单独上传，获取到服务器端返回的文件地址在和表单一起提交。这里就需要异步上传文件。&lt;br&gt;　　在网上扒了扒相关的内容，发现还真不少，阮一峰老师的这篇文章&lt;a href=&quot;http://www.ruanyifeng.com/blog/2012/08/file_upload.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;文件上传的渐进式增强&lt;/a&gt;就介绍的很具体，下面就谈谈自己在实战中遇到的一些问题的感受吧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="js" scheme="https://yl.frontjs.cc/tags/js/"/>
    
      <category term="文件上传" scheme="https://yl.frontjs.cc/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>chrome使用技巧之snippets</title>
    <link href="https://yl.frontjs.cc/2016/03/06/2016-03-06-chrome-tip-snippets/"/>
    <id>https://yl.frontjs.cc/2016/03/06/2016-03-06-chrome-tip-snippets/</id>
    <published>2016-03-06T09:36:00.000Z</published>
    <updated>2018-07-24T07:44:25.200Z</updated>
    
    <content type="html"><![CDATA[<p>在平时开发中，使用的最多的工具应该是chrome了(前端而言)，chrome有很多使用技巧，下面我们要聊的正是<code>snippets</code>,个人认为比控制台的<code>console</code>好用(也只是在某些场景下面)。</p><a id="more"></a><p>例如平时浏览博客园等网站时，看到某些大神写的一些很高大上的代码，想亲手实践下正确性，或是想调试下，那么一般人都会打开<code>sublime</code>等开发工具，建一个页面文档，在<code>script</code>标签里粘贴或者敲出那一坨<code>js</code>(也有可能在js里加几个<code>console.log</code>)，然后在浏览器打开，<code>F12</code>，看控制台信息，如果需要调试也可能在<code>source</code>里找到文件打上断点。</p><p>回顾下刚才描述的过程，不免觉得有点麻烦。也有人说直接在浏览器的控制台里进行码代码，<code>enter</code>后就可以看到结果了。没错，要看结果这或许是很方便，可是，如果要对代码进行调试呢?</p><p>这里就要请出我们的<code>snippets</code>了。<code>snippets</code>在哪？请看下面截图</p><p><img src="http://7xrl5v.com1.z0.glb.clouddn.com/github%2Fio%2Fblog20160306-fetch.jpg" alt="snippets-pic"></p><p>看了上面的图片，各位看官应该已经了了解了如何使用<code>snippets</code>了，在空白区域右键选择<code>new</code>可以新建文件，右键刚才新建的文件选择<code>run</code>可以运行写的测试代码，断点的方法这里就不多介绍了，相信使用<code>chrome</code>开发的朋友都应该很熟了。</p><p>关于<code>snippets</code>就介绍这么多，<code>chrome</code>里找不到<code>snippets</code>的同学可以去升级一下浏览器。</p><p>其实chrome的使用技巧还有很多，比如<code>workspace</code>，这里顺带提一下，也不单独弄篇文章讨论了。请看下图</p><p><img src="http://7xrl5v.com1.z0.glb.clouddn.com/github%2Fio%2Fblog20160306-chrome-workspace.jpg" alt="workspace-pic"></p><p>没错，找到地方后，右键就可以看到这个workspace了，这个是干嘛的？这个是把你本地的资源加载到当前站点，说明白点就是“<code>js</code>”注入(胡乱取的名字)，具体的就不展开了，有兴趣的同学可以去实践下。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在平时开发中，使用的最多的工具应该是chrome了(前端而言)，chrome有很多使用技巧，下面我们要聊的正是&lt;code&gt;snippets&lt;/code&gt;,个人认为比控制台的&lt;code&gt;console&lt;/code&gt;好用(也只是在某些场景下面)。&lt;/p&gt;
    
    </summary>
    
    
      <category term="chrome" scheme="https://yl.frontjs.cc/tags/chrome/"/>
    
      <category term="snippets" scheme="https://yl.frontjs.cc/tags/snippets/"/>
    
  </entry>
  
  <entry>
    <title>使用jekyll搭建博客及jekyll模板easybook使用方法</title>
    <link href="https://yl.frontjs.cc/2016/03/05/2016-03-05-build-jekyll-blog/"/>
    <id>https://yl.frontjs.cc/2016/03/05/2016-03-05-build-jekyll-blog/</id>
    <published>2016-03-05T09:34:10.000Z</published>
    <updated>2018-07-24T07:44:25.200Z</updated>
    
    <content type="html"><![CDATA[<p>网上关于在github上搭建静态博客的文章很多，也很详细，这里只是简单记录下本站的搭建过程。</p><a id="more"></a><ul><li>在<code>github</code>上创建一个项目，项目名为<code>username.github.io</code>，<code>username</code>就是你github的名字，然后一步步的按提示操作…</li><li>不想自己折腾的话可以选择博客模板，刚才在<code>github</code>上创建项目并<code>autoloadpage</code>后是可以选择模板的，我们也可以在网上找<code>jekyll</code>的相关模板，这里我选择的是<a href="https://github.com/laobubu/jekyll-theme-EasyBook" target="_blank" rel="noopener"><code>easybook</code></a></li><li>下载<a href="https://github.com/laobubu/jekyll-theme-EasyBook" target="_blank" rel="noopener"><code>easybook</code></a>后，将其文件拷贝到你本地的<code>username.github.io</code>下（先要<code>clone</code>你刚才在<code>github</code>上建的项目）</li><li>安装<code>ruby</code>、<code>gem</code>、<code>jekyll</code>（自行百度）,然后本地启动查看效果，浏览器打开<a href="http://127.0.0.1:4000" target="_blank" rel="noopener">127.0.0.1:4000</a>就可以看到效果</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jekyll server</span><br></pre></td></tr></table></figure><h3 id="对easybook模板进行修改"><a href="#对easybook模板进行修改" class="headerlink" title="对easybook模板进行修改"></a>对easybook模板进行修改</h3><p>下面按照自己的需求个性化一下这个模板。所谓的个性化，指的是根据刚才显示的效果查看对应的文件，了解页面的显示方式所对应的编写方法（原谅我没有深入的究其原理，只是研究了这套模板而已）。</p><p>先看<code>_config.yml</code>文件，这里面定义的东东简单理解就是定义的全局的变量，然后其他文件可以使用，这里我也不介绍很仔细了，简单的提下自己改的地方。<br><code>title</code>:网站标题<br><code>description</code>:描述，<code>seo</code>用的，生成的页面里的<code>meta</code>标签里可以看到<br><code>avatar</code>:头像对应的图片地址，当然也可以将图片放在项目里引入或者直接修改<code>sidebar.html</code>里的头像地址<br>其他对应参数的修改可以看下面我的<a href="https://github.com/YL2014/YL2014.github.io" target="_blank" rel="noopener"><code>github</code></a>上该项目的具体修改</p><h3 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h3><p>之前看网上的，使用<code>markdown</code>语法编写好博客后，还需要执行<code>jekyll</code>的相关命令进行生产对应的文档，但是我这里没有这么做。文章在本地写好后使用<code>jekyll server</code>进行本地预览，预览成功后，直接将本地修改<code>push</code>到<code>github</code>上就可以了，直接使用<code>master</code>分支，文档的类型是<code>markdown</code>不是<code>md</code>，否则上传后不显示(<code>md</code>类型的文档本地是可以预览显示的，具体原因还不知)，还要注意文档的日期格式。</p><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>感觉使用<code>jekyll</code>来写静态博客还是蛮方便的，这也给了懒人一个写博客的理由 - -</p><p>当然，<code>easybook</code>里文章的分页以及分类都已经实现了，每篇<code>md</code>文档最上边的<code>categories</code>就是分类标识，也可以一篇文章处于多个分类里。关于博客的评论功能有时间再看看怎么引入。<br>希望自己能将这个习惯坚持下去</p><blockquote><p>附上修改后的项目的<code>github</code>地址，<a href="https://github.com/YL2014/YL2014.github.io" target="_blank" rel="noopener">https://github.com/YL2014/YL2014.github.io</a>，欢迎<code>Star</code></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;网上关于在github上搭建静态博客的文章很多，也很详细，这里只是简单记录下本站的搭建过程。&lt;/p&gt;
    
    </summary>
    
    
      <category term="jekyll" scheme="https://yl.frontjs.cc/tags/jekyll/"/>
    
      <category term="blog" scheme="https://yl.frontjs.cc/tags/blog/"/>
    
  </entry>
  
</feed>
